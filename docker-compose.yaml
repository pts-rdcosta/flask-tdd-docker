version: '3.8'

services:

  api:
    build:
      context: ./services/users
      dockerfile: Dockerfile
    entrypoint: ['/usr/src/app/entrypoint.sh']
    volumes:
      - './services/users:/usr/src/app'
    ports:
      - 5004:5000
    environment:
      - CHOKIDAR_USEPOLLING=true"
      - WATCHPACK_POLLING =true
      - WDS_SOCKET_PORT=5004
      - FLASK_APP=src/__init__.py
      - FLASK_DEBUG=1
      - FLASK_ENV=development
      - APP_SETTINGS=src.config.DevelopmentConfig
      - DATABASE_URL=postgresql://postgres:postgres@api-db:5432/api_dev
      - DATABASE_TEST_URL=postgresql://postgres:postgres@api-db:5432/api_test 
    depends_on:  
      - api-db
  
  api-db: 
    build:
      context: ./services/users/src/db
      dockerfile: Dockerfile
    expose:
      - 5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - DATABASE_URL=postgresql://postgres:postgres@api-db:5432/api_dev_xcdf
      - CONNECTION_STRING=postgresql://postgres:postgres@api-db:5432/api_dev_xcdf
  
  client:
    stdin_open: true
    build:
      context: ./services/client
      dockerfile: Dockerfile
    volumes:
      - './services/client:/usr/src/app'
      - '/usr/src/app/node_modules'
    ports:
      - 3007:3000
    environment:
      - CHOKIDAR_USEPOLLING=true # create-ui-app <= 5.x
      - WATCHPACK_POLLING=true # create-ui-app >= 5.x
      - FAST_REFRESH=false
      - WDS_SOCKET_PORT=3007
      - NODE_ENV=development
      - REACT_APP_API_SERVICE_URL=${REACT_APP_API_SERVICE_URL}
    depends_on:
      - api
